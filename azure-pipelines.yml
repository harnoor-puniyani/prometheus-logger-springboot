# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest


steps:  

# - task: JavaToolInstaller@1
#   inputs:
#     versionSpec: '24'
#     jdkArchitectureOption: 'x64'
#     jdkSourceOption: 'PreInstalled'

- script: 'chmod +x ./gradlew'
  displayName: 'Permissions'
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'  # Path to your Gradle wrapper
    tasks: 'build'  # Replace with the tasks you want to run
    # options: '-mx3072m' 
    publishJUnitResults: false
    # testResultsFiles: '**/TEST-*.xml'  # Updated pattern for test result files
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: 'default'  # Replace with your JDK version
    jdkArchitectureOption: 'x64'


- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: 'build/libs'
    artifactName: 'drop'
    publishLocation: 'Container'